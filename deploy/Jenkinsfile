pipeline {
  
  agent any
  
  tools {
    maven 'M3'
    jdk 'JDK'
  }
  
  stages {
    
    stage('Git_fatch') {
      
      steps {
       echo 'Git_fatch'
       git url: 'https://github.com/PatrickWalter123/spring-petclinic.git',
          branch: 'main', credentialsId: 'gitCredential'
      }
      
    }
    
    stage('Echo Hello') {
      
      steps {
       echo 'Hello World' 
      }
      
    }
    
    stage('Maven Build') {
      
      steps {
        echo 'Maven Build'
        sh 'mvn -Dmaven.test.failure.ignore-true clean package'
      }
      
    }
    
    stage('Target workload') {
      
      steps {
        echo 'Target Workload'
            sshPublisher(publishers: [sshPublisherDesc(configName: 'target', 
            transfers: [sshTransfer(cleanRemote: false, excludes: '', 
            execCommand: '''
            fuser -k 8080/tcp
            export BUILD_ID=PetClinic
            nohup java -jar /home/ubuntu/deploy/spring-petclinic-2.7.3.jar >> nohup.out 2>&1 &''', 
            execTimeout: 120000, 
            flatten: false, 
            makeEmptyDirs: false, 
            noDefaultExcludes: false, 
            patternSeparator: '[, ]+', 
            remoteDirectory: 'deploy', 
            remoteDirectorySDF: false, 
            removePrefix: 'target', sourceFiles: 'target/*.jar')], 
            usePromotionTimestamp: false, 
            useWorkspaceInPromotion: false, 
            verbose: false)])
      }
      
    }
    
    stage('Docker Image') {
      
      steps {
        echo 'Docker Image'
      }
      
    }
    
    stage('Image Push') {
      
      steps {
        echo 'Image push'
      }
      
    }
    
    stage('Codedeploy workload') {
      
      steps {
        echo 'Codedeploy workload'
      }
      
    }
    
  }
  
}
